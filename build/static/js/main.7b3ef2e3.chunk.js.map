{"version":3,"sources":["services/firebase.js","components/Header.js","components/Footer.js","pages/Home.js","pages/Chat.js","helpers/auth.js","pages/Signup.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","auth","db","database","Header","Navbar","bg","expand","NavbarBrand","href","Dropdown","as","NavItem","DropdownToggle","NavLink","icon","faBars","currentUser","DropdownMenu","DropdownItem","to","Button","variant","onClick","signOut","Footer","Container","HomePage","className","Jumbotron","props","history","replace","Component","Chat","state","user","chats","content","readError","writeError","loadingChats","handleChange","bind","handleSubmit","myRef","React","createRef","this","setState","chatArea","current","ref","on","snapshot","forEach","snap","push","val","sort","a","b","timestamp","scrollBy","scrollHeight","error","message","event","target","value","preventDefault","Date","now","uid","d","toLocaleDateString","toLocaleTimeString","email","Spinner","animation","role","map","chat","key","formatTime","Form","onSubmit","FormControl","name","onChange","type","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","signInWithGitHub","GithubAuthProvider","Signup","password","googleSignIn","githubSignIn","createUserWithEmailAndPassword","autoComplete","FormGroup","FormLabel","placeholder","Login","signInWithEmailAndPassword","PrivateRoute","component","authenticated","rest","render","pathname","from","location","PublicRoute","App","loading","onAuthStateChanged","exact","path","Home","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7b3ef2e3.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAczHspPTJd7BEjHdc6w26CaN5rUYF5wpc\",\r\n  authDomain: \"chatty-8a759.firebaseapp.com\",\r\n  databaseURL: \"https://chatty-8a759.firebaseio.com\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth;\r\nexport const db = firebase.database();","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../services/firebase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  Dropdown,\r\n  NavLink,\r\n  NavItem,\r\n  Button\r\n} from 'react-bootstrap';\r\nimport DropdownToggle from 'react-bootstrap/DropdownToggle';\r\nimport DropdownMenu from 'react-bootstrap/DropdownMenu';\r\nimport DropdownItem from 'react-bootstrap/DropdownItem';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <NavbarBrand href=\"/\">Chatty</NavbarBrand>\r\n          <Dropdown as= { NavItem }>\r\n            <DropdownToggle as= {NavLink}>\r\n              Menu &nbsp; <FontAwesomeIcon icon={ faBars } />\r\n            </DropdownToggle>\r\n            { auth().currentUser ? <DropdownMenu>\r\n              <DropdownItem>\r\n                <Link to=\"/chat\">Chat</Link>\r\n              </DropdownItem>\r\n              <DropdownItem>\r\n                <Button \r\n                  variant=\"primary\"\r\n                  onClick={ () => auth().signOut() }>Log out</Button>\r\n              </DropdownItem>\r\n            </DropdownMenu> :\r\n            <DropdownMenu>\r\n              <DropdownItem>\r\n                <Link to=\"/login\">Log in</Link>\r\n              </DropdownItem>\r\n              <DropdownItem>\r\n                <Link to=\"/signup\">Sign up</Link>\r\n              </DropdownItem>\r\n            </DropdownMenu> }\r\n          </Dropdown>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <p>&copy; Chatty Demo 2020.</p>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { default as Header } from '../components/Header';\r\nimport { default as Footer } from '../components/Footer';\r\n//import { Link } from 'react-router-dom';\r\nimport {\r\n  Jumbotron,\r\n  Container,\r\n  Button\r\n} from 'react-bootstrap';\r\n\r\n\r\n\r\nexport default class HomePage extends Component {\r\n  render() {\r\n    return(\r\n      <div className=\"home\">\r\n        <Header />\r\n\r\n        <section>\r\n          <Jumbotron>\r\n            <Container>\r\n              <h1>Welcome to Chatty</h1>\r\n              <p className=\"lead\">A great place to share your thoughts with friends </p>\r\n              \r\n             <Button \r\n              onClick={ () => { this.props.history.replace('/signup') } }\r\n              variant=\"primary\"\r\n             >\r\n               Sign up\r\n             </Button>\r\n\r\n             <Button \r\n              onClick={ () => { this.props.history.replace('/login') } }\r\n              variant=\"secondary\"\r\n             >\r\n               Log in\r\n             </Button>\r\n            </Container>\r\n          </Jumbotron>\r\n        </section>\r\n        <Footer />\r\n      </div>\r\n\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n  Spinner,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  Container\r\n} from 'react-bootstrap';\r\nimport Header from '../components/Header';\r\nimport { auth, db } from '../services/firebase';\r\n\r\nexport default class Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: auth().currentUser,\r\n      chats: [],\r\n      content: '',\r\n      readError: null,\r\n      writeError: null,\r\n      loadingChats: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({\r\n      readError: null,\r\n      loadingChats: true\r\n    });\r\n    const chatArea = this.myRef.current;\r\n    try {\r\n      db.ref(\"chats\").on(\"value\", snapshot => {\r\n        let chats=[];\r\n        snapshot.forEach((snap) => {\r\n          chats.push(snap.val());\r\n        });\r\n        chats.sort(function (a, b) {\r\n          return a.timestamp - b.timestamp\r\n        })\r\n        this.setState({ chats });\r\n        chatArea.scrollBy(0, chatArea.scrollHeight);\r\n        this.setState({ loadingChats: false });\r\n      });\r\n    } catch (error) {\r\n        this.setState({\r\n          readError: error.message,\r\n          loadingChats: false\r\n        });\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      content: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.setState({ writeError: null });\r\n    const chatArea = this.myRef.current;\r\n    try {\r\n      await db.ref(\"chats\").push({\r\n        content: this.state.content,\r\n        timestamp: Date.now(),\r\n        uid: this.state.user.uid\r\n      });\r\n      this.setState({ content: '' });\r\n      chatArea.scrollBy(0, chatArea.scrollHeight);\r\n   } catch (error) {\r\n      this.setState({ writeError: error.message });\r\n   }\r\n  }\r\n\r\n  formatTime(timestamp) {\r\n    const d = new Date(timestamp);\r\n    const time = `${d.toLocaleDateString()} ${d.toLocaleTimeString()}`;\r\n    return time;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <Container>\r\n      <Header />\r\n      <div className=\"login-info\">\r\n        <p>Logged in as: <strong variant=\"info\">\r\n          { this.state.user.email }\r\n        </strong></p>\r\n      </div>\r\n        <div \r\n          className=\"chat-area\"\r\n          ref={ this.myRef }>\r\n            { this.state.loadingChats ? \r\n              <Spinner \r\n                animation=\"border\" \r\n                role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n              </Spinner> : \"\"\r\n            }\r\n\r\n            { this.state.chats.map(chat => {\r\n              return <p key={ chat.timestamp } className={ \"chat-bubble \" + (this.state.user.uid === chat.uid ? \"current-user\" : \"\")}>\r\n                  { chat.content }\r\n                     <br />\r\n                      <span className=\"chat-time float-right\">\r\n                        { this.formatTime(chat.timestamp) }\r\n                      </span>\r\n                </p>\r\n            })}\r\n        </div>\r\n\r\n        <Form onSubmit={ this.handleSubmit }>\r\n          <FormControl \r\n            as=\"textarea\" \r\n            name=\"content\"\r\n            onChange={ this.handleChange }\r\n            value={ this.state.content }>\r\n          </FormControl>\r\n\r\n          { this.state.error ? \r\n              <p variant=\"danger\">\r\n                { this.state.error }\r\n              </p> : null\r\n          }\r\n\r\n          <Button \r\n            type=\"submit\"\r\n            variant=\"primary\">\r\n              Send\r\n          </Button>\r\n    </Form>\r\n\r\n      \r\n    </Container>\r\n    );\r\n  }\r\n}","import { auth } from '../services/firebase';\r\n\r\nexport function signup(email, password) {\r\n  return auth().createUserWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function signin(email, password) {\r\n  return auth().signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function signInWithGoogle() {\r\n  const provider = new auth.GoogleAuthProvider();\r\n  return auth().signInWithPopup(provider);\r\n}\r\n\r\nexport function signInWithGitHub() {\r\n  const provider = new auth.GithubAuthProvider();\r\n  return auth().signInWithPopup(provider);\r\n}\r\n\r\nexport function logout() {\r\n  return auth().signOut();\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormLabel,\r\n  FormControl,\r\n  FormGroup\r\n} from 'react-bootstrap';\r\nimport { signup, signInWithGoogle, signInWithGitHub } from '../helpers/auth';\r\n\r\nexport default class Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      email: '',\r\n      password: '',\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.googleSignIn = this.googleSignIn.bind(this);\r\n    this.githubSignIn = this.githubSignIn.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.setState({ error: ' '});\r\n      try {\r\n        await signup(this.state.email, this.state.password);\r\n      } catch (error) {\r\n        this.setState({ error: error.message });\r\n      }\r\n  }\r\n\r\n  async googleSignIn() {\r\n    try {\r\n      await signInWithGoogle();\r\n    } catch (error) {\r\n      this.setState({ error: error.message });\r\n    }\r\n  }\r\n\r\n  async githubSignIn() {\r\n    try {\r\n      await signInWithGitHub();\r\n    } catch (error) {\r\n      this.setState({ error: error.message });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Form \r\n          autoComplete=\"off\"\r\n          onSubmit={ this.handleSubmit }\r\n        >\r\n          <h1>Sign up to <Link to=\"/\">Chatty</Link>\r\n          </h1>\r\n            <p>Fill in the form below to create an account.</p>\r\n\r\n            <FormGroup>\r\n              <FormLabel>Email:</FormLabel>\r\n                <FormControl  \r\n                  placeholder=\"Email\" \r\n                  name=\"email\" \r\n                  type=\"email\"\r\n                  onChange={ this.handleChange }\r\n                  value={ this.state.email }\r\n                />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <FormLabel>Password:</FormLabel>\r\n                <FormControl\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={ this.handleChange }\r\n                  value={ this.state.password }\r\n                  type=\"password\"\r\n                />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              { this.state.error ? <p>{ this.state.error }</p> : null}\r\n              <Button \r\n                type=\"submit\"\r\n                variant=\"primary\"\r\n              >\r\n                  Sign up\r\n              </Button>\r\n\r\n                <p>or </p>\r\n\r\n              <Button \r\n                onClick={ this.googleSignIn } type=\"button\"\r\n                variant=\"danger\"\r\n              >\r\n                Sign up with Google\r\n              </Button>\r\n\r\n              <Button \r\n                type=\"button\" \r\n                variant=\"secondary\"\r\n                onClick={ this.githubSignIn }\r\n              >\r\n                Sign up with GitHub\r\n              </Button>\r\n            </FormGroup>\r\n            <hr />\r\n\r\n            <p>Already have an account? <Link to=\"/login\">Log in</Link></p>\r\n\r\n        </Form>\r\n      </Container>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { \r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormLabel,\r\n  FormControl,\r\n  FormGroup\r\n } from 'react-bootstrap';\r\nimport { signin, signInWithGoogle, signInWithGitHub } \r\nfrom '../helpers/auth';\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      email: '',\r\n      password: '',\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.googleSignIn = this.googleSignIn.bind(this);\r\n    this.githubSignIn = this.githubSignIn.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.setState({ error: \"\" });\r\n    try {\r\n      await signin(this.state.email, this.state.password);\r\n    } catch (error) {\r\n      this.setState({ error: error.message });\r\n    }\r\n  }\r\n\r\n  async googleSignIn() {\r\n    try {\r\n      await signInWithGoogle();\r\n    } catch (error) {\r\n      this.setState({ error: error.message });\r\n    }\r\n  }\r\n\r\n  async githubSignIn() {\r\n    try {\r\n      await signInWithGitHub();\r\n    } catch (error) {\r\n      this.setState({ error: error.message });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Form\r\n          autoComplete=\"off\"\r\n          onSubmit={ this.handleSubmit }\r\n        >\r\n          <h1>Log in to <Link to=\"/\">Chatty</Link></h1>\r\n            <p>Fill in the form below to log in to your account.</p>\r\n\r\n            <FormGroup>\r\n              <FormLabel>Email:</FormLabel>\r\n              <FormControl\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                onChange={ this.handleChange }\r\n                value={ this.state.email }\r\n              /> \r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <FormLabel>Password:</FormLabel>\r\n                <FormControl\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={ this.handleChange }\r\n                  value={ this.state.password }\r\n                  type=\"password\"\r\n                />\r\n            \r\n              <br />\r\n              <br />\r\n           \r\n              { this.state.error ? (\r\n                <p>{ this.state.error }</p>\r\n              ) : null }\r\n              <button variant=\"primary\" type=\"submit\">Login</button>\r\n            </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <p>&nbsp;</p>\r\n                <p>You can also login with any of these services:</p>\r\n                  <Button \r\n                    variant=\"danger\"\r\n                    type=\"button\"\r\n                    onClick={ this.googleSignIn }\r\n                  >\r\n                    Login with Google\r\n                  </Button>\r\n\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    type=\"button\"\r\n                    onClick={ this.githubSignIn }\r\n                  >\r\n                    Login with GitHub\r\n                  </Button>\r\n            </FormGroup>\r\n\r\n            <hr />\r\n\r\n            <p>Don't have an account? <Link to=\"/signup\">Sign up!</Link></p>\r\n        </Form>\r\n      </Container>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport {\n  Spinner\n} from 'react-bootstrap';\nimport Home from './pages/Home';\nimport Chat from './pages/Chat';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport { auth } from './services/firebase';\nimport './styles.css';\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n            <Redirect\n              to={{ pathname: \"/login\", state: { from: props.location } }}\n            />\n          )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated === false ? (\n          <Component {...props} />\n        ) : (\n            <Redirect to=\"/chat\" />\n          )\n      }\n    />\n  );\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      authenticated: false,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          authenticated: true,\n          loading: false\n        });\n      } else {\n        this.setState({\n          authenticated: false,\n          loading: false\n        });\n      }\n    });\n  }\n\n  render() {\n    return this.state.loading === true ? (\n      <Spinner\n        animation=\"border\"\n        role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    ) : (\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <PrivateRoute\n              path=\"/chat\"\n              authenticated={this.state.authenticated}\n              component={Chat}\n            />\n            <PublicRoute\n              path=\"/signup\"\n              authenticated={this.state.authenticated}\n              component={Signup}\n            />\n            <PublicRoute\n              path=\"/login\"\n              authenticated={this.state.authenticated}\n              component={Login}\n            />\n          </Switch>\n        </Router>\n      );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}